# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/utils/utils.plot.ipynb.

# %% auto 0
__all__ = ['plot_decomposition']

# %% ../../nbs/utils/utils.plot.ipynb 1
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# %% ../../nbs/utils/utils.plot.ipynb 2
def plot_decomposition(signal, trend, seasonal, noise, title="Time Series Decomposition"):
    """
    Plots the original signal, trend, seasonal, and noise using Plotly subplots.

    Args:
        signal (array-like): Original time series.
        trend (array-like): Estimated trend component.
        seasonal (array-like): Estimated seasonal component.
        noise (array-like): Residual (noise).
        title (str): Main title of the plot.
    """
    n = len(signal)
    x = list(range(n))

    fig = make_subplots(
        rows=4,
        cols=1,
        shared_xaxes=True,
        subplot_titles=("Original Signal", "Trend", "Seasonal", "Noise"),
        vertical_spacing=0.05,
    )

    fig.add_trace(go.Scatter(x=x, y=signal, name="Signal", line=dict(color="blue")), row=1, col=1)
    fig.add_trace(go.Scatter(x=x, y=trend, name="Trend", line=dict(color="orange")), row=2, col=1)
    fig.add_trace(
        go.Scatter(x=x, y=seasonal, name="Seasonal", line=dict(color="green")), row=3, col=1
    )
    fig.add_trace(go.Scatter(x=x, y=noise, name="Noise", line=dict(color="red")), row=4, col=1)

    fig.update_layout(height=800, title_text=title, showlegend=False, template="plotly_white")

    fig.update_yaxes(title_text="Value", row=1, col=1)
    fig.update_yaxes(title_text="Value", row=2, col=1)
    fig.update_yaxes(title_text="Value", row=3, col=1)
    fig.update_yaxes(title_text="Value", row=4, col=1)

    fig.update_xaxes(title_text="Time", row=4, col=1)

    fig.show()
