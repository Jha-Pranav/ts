# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/src/utils.ipynb.

# %% auto 0
__all__ = ["generate_time_series"]

# %% ../nbs/src/utils.ipynb 1
import numpy as np
import pandas as pd


# %% ../nbs/src/utils.ipynb 2
def generate_time_series(
    n_points=200, trend_slope=0.05, seasonality_period=24, seasonality_amplitude=5, noise_std=1
):
    """
    Generates a synthetic time series with trend, seasonality, and noise.

    Parameters:
        n_points (int): Number of time steps.
        trend_slope (float): Slope of the trend.
        seasonality_period (int): Number of points per season.
        seasonality_amplitude (float): Amplitude of the seasonal pattern.
        noise_std (float): Standard deviation of the Gaussian noise.

    Returns:
        np.ndarray: Generated time series.
    """

    time = np.arange(n_points)

    # Linear trend
    trend = trend_slope * time

    # Seasonal pattern (sine wave)
    seasonality = seasonality_amplitude * np.sin(2 * np.pi * time / seasonality_period)

    # Random noise
    noise = np.random.normal(0, noise_std, n_points)

    # Combine all components
    series = trend + seasonality + noise

    return pd.Series(series)
