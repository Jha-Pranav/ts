# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "master",
        "doc_baseurl": "/ts",
        "doc_host": "https://Jha-Pranav.github.io",
        "git_url": "https://github.com/Jha-Pranav/ts",
        "lib_path": "ts",
    },
    "syms": {
        "ts.benchmark.tsdataset": {
            "ts.benchmark.tsdataset.TimeSeriesBenchmarkDataset": (
                "src/utils.benchmark.html#timeseriesbenchmarkdataset",
                "ts/benchmark/tsdataset.py",
            ),
            "ts.benchmark.tsdataset.TimeSeriesBenchmarkDataset.__init__": (
                "src/utils.benchmark.html#timeseriesbenchmarkdataset.__init__",
                "ts/benchmark/tsdataset.py",
            ),
            "ts.benchmark.tsdataset.TimeSeriesBenchmarkDataset.get_datasets": (
                "src/utils.benchmark.html#timeseriesbenchmarkdataset.get_datasets",
                "ts/benchmark/tsdataset.py",
            ),
            "ts.benchmark.tsdataset.TimeSeriesBenchmarkDataset.load_dataset": (
                "src/utils.benchmark.html#timeseriesbenchmarkdataset.load_dataset",
                "ts/benchmark/tsdataset.py",
            ),
            "ts.benchmark.tsdataset.TimeSeriesBenchmarkDataset.to_long_format": (
                "src/utils.benchmark.html#timeseriesbenchmarkdataset.to_long_format",
                "ts/benchmark/tsdataset.py",
            ),
        },
        "ts.models.ltsf": {
            "ts.models.ltsf.LTSF": ("src/model.baseline.html#ltsf", "ts/models/ltsf.py"),
            "ts.models.ltsf.LTSF.__init__": (
                "src/model.baseline.html#ltsf.__init__",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.LTSF.configure_optimizers": (
                "src/model.baseline.html#ltsf.configure_optimizers",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.LTSF.forward": (
                "src/model.baseline.html#ltsf.forward",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.LTSF.test_step": (
                "src/model.baseline.html#ltsf.test_step",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.LTSF.training_step": (
                "src/model.baseline.html#ltsf.training_step",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.LTSF.validation_step": (
                "src/model.baseline.html#ltsf.validation_step",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSDataLoader": (
                "src/model.baseline.html#tsdataloader",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSDataLoader.__init__": (
                "src/model.baseline.html#tsdataloader.__init__",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSDataLoader.setup": (
                "src/model.baseline.html#tsdataloader.setup",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSDataLoader.test_dataloader": (
                "src/model.baseline.html#tsdataloader.test_dataloader",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSDataLoader.train_dataloader": (
                "src/model.baseline.html#tsdataloader.train_dataloader",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSDataLoader.val_dataloader": (
                "src/model.baseline.html#tsdataloader.val_dataloader",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSRegressionDataset": (
                "src/model.baseline.html#tsregressiondataset",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSRegressionDataset.__getitem__": (
                "src/model.baseline.html#tsregressiondataset.__getitem__",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSRegressionDataset.__init__": (
                "src/model.baseline.html#tsregressiondataset.__init__",
                "ts/models/ltsf.py",
            ),
            "ts.models.ltsf.TSRegressionDataset.__len__": (
                "src/model.baseline.html#tsregressiondataset.__len__",
                "ts/models/ltsf.py",
            ),
        },
        "ts.preprocess.dataloader": {
            "ts.preprocess.dataloader.TSDataLoader": (
                "src/preprocess.dataloader.html#tsdataloader",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSDataLoader.__init__": (
                "src/preprocess.dataloader.html#tsdataloader.__init__",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSDataLoader.setup": (
                "src/preprocess.dataloader.html#tsdataloader.setup",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSDataLoader.test_dataloader": (
                "src/preprocess.dataloader.html#tsdataloader.test_dataloader",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSDataLoader.train_dataloader": (
                "src/preprocess.dataloader.html#tsdataloader.train_dataloader",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSDataLoader.val_dataloader": (
                "src/preprocess.dataloader.html#tsdataloader.val_dataloader",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSRegressionDataset": (
                "src/preprocess.dataloader.html#tsregressiondataset",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSRegressionDataset.__getitem__": (
                "src/preprocess.dataloader.html#tsregressiondataset.__getitem__",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSRegressionDataset.__init__": (
                "src/preprocess.dataloader.html#tsregressiondataset.__init__",
                "ts/preprocess/dataloader.py",
            ),
            "ts.preprocess.dataloader.TSRegressionDataset.__len__": (
                "src/preprocess.dataloader.html#tsregressiondataset.__len__",
                "ts/preprocess/dataloader.py",
            ),
        },
        "ts.setup": {},
        "ts.utils.plot_forecast": {
            "ts.utils.plot_forecast.mlp_dms": (
                "src/utils.plot.html#mlp_dms",
                "ts/utils/plot_forecast.py",
            ),
            "ts.utils.plot_forecast.mlp_dms_singular": (
                "src/utils.plot.html#mlp_dms_singular",
                "ts/utils/plot_forecast.py",
            ),
            "ts.utils.plot_forecast.mlp_ims": (
                "src/utils.plot.html#mlp_ims",
                "ts/utils/plot_forecast.py",
            ),
        },
    },
}
